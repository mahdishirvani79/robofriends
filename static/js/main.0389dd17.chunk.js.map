{"version":3,"sources":["reportWebVitals.js","components/robots.js","components/SearchBox.js","components/Card.js","components/CardsList.js","components/Scroll.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","robots","id","name","username","email","SearchBox","searchChange","className","type","Text","placeholder","onChange","Card","userName","alt","src","CardsList","map","user","i","Scroll","props","style","overflow","border","height","children","App","useState","myrobots","setRobot","searchField","setSearchField","useEffect","searchList","filter","robot","toLowerCase","includes","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,eCPDQ,EAAS,CACpB,CACEC,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,OChDIC,EATG,SAAC,GAClB,IADmBC,EACpB,EADoBA,aAEhB,OACI,qBAAKC,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAAmCC,KAAMC,KAAMC,YAAa,WAAYC,SAAUL,OCO5FM,EAXF,SAAC,GACb,IADcX,EACf,EADeA,GAAKY,EACpB,EADoBA,SAAUT,EAC9B,EAD8BA,MAE1B,OACI,sBAAKG,UAAU,sDAAf,UACI,qBAAKO,IAAM,QAAQC,IAAG,+BAA0Bd,EAA1B,cACtB,6BAAKY,IACL,4BAAIT,QCUDY,EAfG,SAAC,GAClB,IADmBhB,EACpB,EADoBA,OAEhB,OACI,8BAEIA,EAAOiB,KAAI,SAACC,EAAKC,GACjB,OACI,cAAC,EAAD,CAAoBlB,GAAIiB,EAAKjB,GAAIY,SAAUK,EAAKf,SAAUC,MAAOc,EAAKd,OAA3Dc,EAAKjB,UCAjBmB,EARA,SAACC,GAEZ,OACA,qBAAKC,MAAO,CAACC,SAAW,SAAUC,OAAS,mBAAoBC,OAAS,UAAxE,SACCJ,EAAMK,YC0CIC,MA1Cf,WAWI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAqCF,mBAAS,IAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KAGAC,qBAAU,WAINH,EAAS9B,KACX,IAEF,IAKMkC,EAAaL,EAASM,QAAO,SAAAC,GACnC,OAAOA,EAAMjC,SAASkC,cAAcC,SAASP,EAAYM,kBAGrD,OACI,sBAAK9B,UAAU,KAAf,UACA,6CACA,cAAC,EAAD,CAAWD,aAZI,SAACiC,GAEpBP,EAAeO,EAAMC,OAAOC,UAWxB,cAAC,EAAD,UACA,cAAC,EAAD,CAAWzC,OAAQkC,UCnC/BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BvD,K","file":"static/js/main.0389dd17.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const robots = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) =>\n{\n    return(\n        <div className='pa2'>\n        <input className='pa3 ba b--green bg-lightest-blue' type={Text} placeholder={\"roboname\"} onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Card = ({id , userName, email}) =>\n{\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt = 'image' src={`https://robohash.org/${id}?200x200`}/>\n            <h1>{userName}</h1>\n            <p>{email}</p>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\nconst CardsList = ({robots}) =>\n{\n    return(\n        <div>\n        {\n            robots.map((user,i) => {\n            return(\n                <Card key={user.id} id={user.id} userName={user.username} email={user.email}/>\n            )\n            })\n        }\n        </div>\n    )\n}\n\nexport default CardsList","import React from 'react';\n\nconst Scroll = (props) =>\n{\n    return( \n    <div style={{overflow : 'scroll', border : '5px solid border', height : '1000px'}}>\n    {props.children}\n    </div>\n    )\n}\nexport default Scroll;","import React, { useState, useEffect } from 'react';\nimport {robots} from '../components/robots.js'\nimport SearchBox from '../components/SearchBox'\nimport CardsList from '../components/CardsList'\nimport Scroll from '../components/Scroll'\n\nfunction App()\n{\n    // constructor(){\n    //     super()\n    //     this.state = {\n    //         robots : robots,\n    //         searchField : ''\n    //     }\n\n    // }\n\n    const [myrobots,setRobot] = useState([])\n    const [searchField,setSearchField] = useState('')\n\n\n    useEffect(()=>{\n        // fetch('http://jsonplaceholder.typicode.com/users')\n        // .then(response => response.json())\n        // .then(users => {setRobot(users)});\n        setRobot(robots)\n    },[])\n\n    const onSearchChange = (event) =>\n    {\n        setSearchField(event.target.value) \n    }\n\n    const searchList = myrobots.filter(robot => {\n    return robot.username.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n        return(\n            <div className='tc'>\n            <h1>Robofriends</h1>\n            <SearchBox searchChange={onSearchChange}/>\n            <Scroll>\n            <CardsList robots={searchList}  />\n            </Scroll>\n            </div>\n        )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport  'tachyons'\nimport App from './container/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}