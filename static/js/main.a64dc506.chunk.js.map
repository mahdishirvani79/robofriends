{"version":3,"sources":["reportWebVitals.js","components/SearchBox.js","components/Card.js","components/CardsList.js","components/Scroll.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchChange","className","type","Text","placeholder","onChange","Card","id","userName","email","alt","src","CardsList","robots","map","user","i","username","Scroll","props","style","overflow","border","height","children","App","useState","setRobot","searchField","setSearchField","useEffect","fetch","response","json","users","searchList","filter","robot","toLowerCase","includes","event","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sJAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCICQ,EATG,SAAC,GAClB,IADmBC,EACpB,EADoBA,aAEhB,OACI,qBAAKC,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAAmCC,KAAMC,KAAMC,YAAa,WAAYC,SAAUL,OCO5FM,EAXF,SAAC,GACb,IADcC,EACf,EADeA,GAAKC,EACpB,EADoBA,SAAUC,EAC9B,EAD8BA,MAE1B,OACI,sBAAKR,UAAU,sDAAf,UACI,qBAAKS,IAAM,QAAQC,IAAG,+BAA0BJ,EAA1B,cACtB,6BAAKC,IACL,4BAAIC,QCUDG,EAfG,SAAC,GAClB,IADmBC,EACpB,EADoBA,OAEhB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACjB,OACI,cAAC,EAAD,CAAoBT,GAAIQ,EAAKR,GAAIC,SAAUO,EAAKE,SAAUR,MAAOM,EAAKN,OAA3DM,EAAKR,UCAjBW,EARA,SAACC,GAEZ,OACA,qBAAKC,MAAO,CAACC,SAAW,SAAUC,OAAS,mBAAoBC,OAAS,UAAxE,SACCJ,EAAMK,YCyCIC,MAzCf,WAWI,MAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAAqCD,mBAAS,IAA9C,mBAAOE,EAAP,KAAmBC,EAAnB,KAGAC,qBAAU,WACNC,MAAM,6CACLtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAUP,EAASO,QAC3B,IAEF,IAKMC,EAAatB,EAAOuB,QAAO,SAAAC,GACjC,OAAOA,EAAMpB,SAASqB,cAAcC,SAASX,EAAYU,kBAGrD,OACI,sBAAKrC,UAAU,KAAf,UACA,6CACA,cAAC,EAAD,CAAWD,aAZI,SAACwC,GAEpBX,EAAeW,EAAMC,OAAOC,UAWxB,cAAC,EAAD,UACA,cAAC,EAAD,CAAW7B,OAAQsB,UClC/BQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzD,K","file":"static/js/main.a64dc506.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\nconst SearchBox = ({searchChange}) =>\n{\n    return(\n        <div className='pa2'>\n        <input className='pa3 ba b--green bg-lightest-blue' type={Text} placeholder={\"roboname\"} onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Card = ({id , userName, email}) =>\n{\n    return(\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt = 'image' src={`https://robohash.org/${id}?200x200`}/>\n            <h1>{userName}</h1>\n            <p>{email}</p>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\nconst CardsList = ({robots}) =>\n{\n    return(\n        <div>\n        {\n            robots.map((user,i) => {\n            return(\n                <Card key={user.id} id={user.id} userName={user.username} email={user.email}/>\n            )\n            })\n        }\n        </div>\n    )\n}\n\nexport default CardsList","import React from 'react';\n\nconst Scroll = (props) =>\n{\n    return( \n    <div style={{overflow : 'scroll', border : '5px solid border', height : '1000px'}}>\n    {props.children}\n    </div>\n    )\n}\nexport default Scroll;","import React, { useState, useEffect } from 'react';\n// import {robots} from '../components/robots.js'\nimport SearchBox from '../components/SearchBox'\nimport CardsList from '../components/CardsList'\nimport Scroll from '../components/Scroll'\n\nfunction App()\n{\n    // constructor(){\n    //     super()\n    //     this.state = {\n    //         robots : robots,\n    //         searchField : ''\n    //     }\n\n    // }\n\n    const [robots,setRobot] = useState([])\n    const [searchField,setSearchField] = useState('')\n\n\n    useEffect(()=>{\n        fetch('http://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => {setRobot(users)});\n    },[])\n\n    const onSearchChange = (event) =>\n    {\n        setSearchField(event.target.value) \n    }\n\n    const searchList = robots.filter(robot => {\n    return robot.username.toLowerCase().includes(searchField.toLowerCase())\n    })\n\n        return(\n            <div className='tc'>\n            <h1>Robofriends</h1>\n            <SearchBox searchChange={onSearchChange}/>\n            <Scroll>\n            <CardsList robots={searchList}  />\n            </Scroll>\n            </div>\n        )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport  'tachyons'\nimport App from './container/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}